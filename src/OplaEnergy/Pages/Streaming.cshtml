@page "/streaming"

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Streaming</title>
    <style>
        .line {
            fill: none;
            stroke: #000;
            stroke-width: 1.5px;
        }
    </style>
</head>
<body>
    <svg width="480" height="640"></svg>
    <script src="~/lib/d3/dist/d3.js"></script>
    <script>
        var n = 40,
            random = d3.randomNormal(0, .2),
            data = d3.range(n).map(random);

        var svg = d3.select("svg"),
            margin = { top: 20, right: 20, bottom: 20, left: 40 },
            width = +svg.attr("width") - margin.left - margin.right,
            height = +svg.attr("height") - margin.top - margin.bottom,
            g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        g.append("defs").append("clipPath")
            .attr("id", "clip")
            .append("rect")
            .attr("width", width)
            .attr("height", height);

        var y = d3.scaleLinear()
            .domain([0, n - 1])
            .range([0, height]);

        var x = d3.scaleLinear()
            .domain([-1, 1])
            .range([width, 0]);

        var line = d3.line()
            .x((d) => x(d))
            .y((d, i) => y(i));

        g.append("g")
            .attr("class", "axis axis--x")
            .attr("transform", "translate(0," + y(n - 1) + ")")
            .call(d3.axisBottom(x));

        g.append("g")
            .attr("class", "axis axis--y")
            .call(d3.axisLeft(y));

        g = g.append("g")
            .attr("clip-path", "url(#clip)");

        let path = g.append("path")
            .datum(data)
            .attr("class", "line")
            .attr("d", line);

        (function tick() {
            // Push a new data point onto the back.
            data.push(random());

            // Cancels the active transition on the selected element to avoid jiggle.
            path.interrupt();

            // Redraw the line, and then slide it to the top.
            path.attr("d", line)
                .attr("transform", null)
                .transition()
                .duration(1000)
                .ease(d3.easeLinear)
                .attr("transform", "translate(0," + y(-1) + ")");

            // Pop the old data point off the front.
            data.shift();

            setTimeout(tick, 1000);
        })();        
    </script>
</body>
</html>
